server:
  # 配置访问时的端口号
  port: 8088
  tomcat:
    max-http-form-post-size: -1
spring:
  #redis 配置
  redis:
    database: 0
    host: 218.85.121.157
    port: 6379
    password: xz107110
    jedis:
      pool:
        max-active: 200
        max-idle: 20
        min-idle: 0
        max-wait: -1ms
    timeout: 2000ms
  # 数据源配置
  datasource:
    name: dev
    url: jdbc:mysql://localhost:3306/zhsq_local?useUnicode=true&autoReconnect=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8&zeroDateTimeBehavior=CONVERT_TO_NULL&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 监控数据库
    filters:: stat
    # 连接池最大使用数量
    maxActive: 20
    # 初始化连接大小
    initialSize: 1
    # 获取连接最大等待时间
    maxWait: 60000
    # 连接池最小空闲
    minIdle: 1
    # 配置间隔多久进行一次检测，检测需要关闭的空闲连接
    timeBetweenEvictionRunsMillis: 60000
    # 一个连接在池中的最小生存时间
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
  aop:
    # 默认是开启aop
    auto: true
  kafka:
    bootstrap-servers: 218.85.121.157:9093 #指定kafka server的地址，集群配多个，中间，逗号隔开
    producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
        acks: -1
        properties:
          sasl.mechanism: PLAIN
          security.protocol: SASL_PLAINTEXT
          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-zhsq";
    consumer:
      group-id: group-2 #群组ID
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      interceptor-classes: com.herocheer.zhsq.localservice.impl.support.KafkaConsumerIntercepter
      properties:
        sasl.mechanism: PLAIN
        security.protocol: SASL_PLAINTEXT
        sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-zhsq";
logging:
  # 日志配置文件
  config: classpath:logback-spring.xml
  # 保存日志文件目录路径
  file:
    path: ${user.dir}/logs
dnake:
  camera:
    configPort: 10001
    dataPort: 10002
    timeoutInMs: 5000
    defaultFacePicPath: F:/zhsq/dnake/defaultFacePic/dnake_default_pic.jpg
    catchFacePicPath: F:/zhsq/dnake/catchFacePic/
    catchBackgroundPicPath: F:/zhsq/dnake/catchBackgroundPic/
    successVoice: 请通行
ytbox:
  repositoryId: 1593763310419  #zhsq_library
  catchFacePicPath: F:/zhsq/ytbox/catchFacePic/
  catchBackgroundPicPath: F:/zhsq/ytbox/catchBackgroundPic/
analysis:
  picPath: F:/zhsq/analysis/catchPic/snapImg/
  videoPath: F:/zhsq/analysis/video/snapVideo/
  linuxPath: /root/zhsq/img/
#scc.herocheer.com/zhsq/sys  127.0.0.1:8090
zhsq:
   cloud:
     api:
       getToken: https://zhsq.zhixiservice.com/zhsq/sys/v1/sys/TokenController/getToken
       uploadDeviceStatus: https://zhsq.zhixiservice.com/zhsq/sys/v1/sys/Service/ExternalServiceController/heartBeatProcess
       uploadRecStatus: https://zhsq.zhixiservice.com/zhsq/sys/v1/sys/Service/ExternalServiceController/sendTaskResult
       uploadCaptureEvent: https://zhsq.zhixiservice.com/zhsq/sys/v1/sys/Service/ExternalServiceController/sendPersonDisReCord
       uploadGuardDoorEvent: https://zhsq.zhixiservice.com/v1/sys/Service/ExternalServiceController/sendGuardCardRecord
       uploadAnalysisEvent: https://zhsq.zhixiservice.com/zhsq/sys/v1/sys/Service/ExternalServiceController/sendAnalysisReCord
       uploadStranger: https://zhsq.zhixiservice.com/zhsq/sys/v1/sys/Service/ExternalServiceController/sendStranger
       #uploadAnalysisEvent: http://127.0.0.1:8090/v1/sys/Service/ExternalServiceController/sendAnalysisReCord
     loginName: gangcheng002
     password: 123456
deviceCheck:
    interval: 100000
pic:
  download:
    localPath:
      white: F:/zhsq/downPic/white/
      black: F:/zhsq/downPic/black/
hik:
  sdk:
    path: E:\\svnproject\\02_源码\\01_源码\\01_Branches\\local_service\\local-service\\local-service-core\\src\\main\\resources\\lib\\hik\\HCNetSDK.dll