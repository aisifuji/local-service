/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.herocheer.zhsq.localservice.core.device.box.YTBox.pojo;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RetrivalFaceResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -645336379452442210L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RetrivalFaceResult\",\"namespace\":\"com.herocheer.zhsq.localservice.core.device.box.YTBox.pojo\",\"fields\":[{\"name\":\"face\",\"type\":{\"type\":\"record\",\"name\":\"Face\",\"fields\":[{\"name\":\"face_image\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Image\",\"fields\":[{\"name\":\"content\",\"type\":\"bytes\"},{\"name\":\"content_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"valid mime-type\"}]}]},{\"name\":\"face_feature\",\"type\":[\"null\",\"bytes\"]},{\"name\":\"scene_image\",\"type\":[\"null\",\"Image\"]},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The time point when this image was snapshotted\"},{\"name\":\"extra_meta\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"json format\"}]}},{\"name\":\"retrieval_results\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RetrievalResult\",\"fields\":[{\"name\":\"repository_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"similar_faces\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SimilarFace\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"face_id in the repository\"},{\"name\":\"similarity\",\"type\":\"double\",\"doc\":\"0 - 100\"},{\"name\":\"extra_meta\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"json format\"}]}}}]}}},{\"name\":\"result_type\",\"type\":{\"type\":\"enum\",\"name\":\"ResultType\",\"symbols\":[\"Capture\",\"Retrieval\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Face face;
  @Deprecated public java.util.List<RetrievalResult> retrieval_results;
  @Deprecated public ResultType result_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RetrivalFaceResult() {}

  /**
   * All-args constructor.
   * @param face The new value for face
   * @param retrieval_results The new value for retrieval_results
   * @param result_type The new value for result_type
   */
  public RetrivalFaceResult(Face face, java.util.List<RetrievalResult> retrieval_results, ResultType result_type) {
    this.face = face;
    this.retrieval_results = retrieval_results;
    this.result_type = result_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return face;
    case 1: return retrieval_results;
    case 2: return result_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: face = (Face)value$; break;
    case 1: retrieval_results = (java.util.List<RetrievalResult>)value$; break;
    case 2: result_type = (ResultType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'face' field.
   * @return The value of the 'face' field.
   */
  public Face getFace() {
    return face;
  }

  /**
   * Sets the value of the 'face' field.
   * @param value the value to set.
   */
  public void setFace(Face value) {
    this.face = value;
  }

  /**
   * Gets the value of the 'retrieval_results' field.
   * @return The value of the 'retrieval_results' field.
   */
  public java.util.List<RetrievalResult> getRetrievalResults() {
    return retrieval_results;
  }

  /**
   * Sets the value of the 'retrieval_results' field.
   * @param value the value to set.
   */
  public void setRetrievalResults(java.util.List<RetrievalResult> value) {
    this.retrieval_results = value;
  }

  /**
   * Gets the value of the 'result_type' field.
   * @return The value of the 'result_type' field.
   */
  public ResultType getResultType() {
    return result_type;
  }

  /**
   * Sets the value of the 'result_type' field.
   * @param value the value to set.
   */
  public void setResultType(ResultType value) {
    this.result_type = value;
  }

  /**
   * Creates a new RetrivalFaceResult RecordBuilder.
   * @return A new RetrivalFaceResult RecordBuilder
   */
  public static RetrivalFaceResult.Builder newBuilder() {
    return new RetrivalFaceResult.Builder();
  }

  /**
   * Creates a new RetrivalFaceResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RetrivalFaceResult RecordBuilder
   */
  public static RetrivalFaceResult.Builder newBuilder(RetrivalFaceResult.Builder other) {
    return new RetrivalFaceResult.Builder(other);
  }

  /**
   * Creates a new RetrivalFaceResult RecordBuilder by copying an existing RetrivalFaceResult instance.
   * @param other The existing instance to copy.
   * @return A new RetrivalFaceResult RecordBuilder
   */
  public static RetrivalFaceResult.Builder newBuilder(RetrivalFaceResult other) {
    return new RetrivalFaceResult.Builder(other);
  }

  /**
   * RecordBuilder for RetrivalFaceResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RetrivalFaceResult>
    implements org.apache.avro.data.RecordBuilder<RetrivalFaceResult> {

    private Face face;
    private Face.Builder faceBuilder;
    private java.util.List<RetrievalResult> retrieval_results;
    private ResultType result_type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(RetrivalFaceResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.face)) {
        this.face = data().deepCopy(fields()[0].schema(), other.face);
        fieldSetFlags()[0] = true;
      }
      if (other.hasFaceBuilder()) {
        this.faceBuilder = Face.newBuilder(other.getFaceBuilder());
      }
      if (isValidValue(fields()[1], other.retrieval_results)) {
        this.retrieval_results = data().deepCopy(fields()[1].schema(), other.retrieval_results);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.result_type)) {
        this.result_type = data().deepCopy(fields()[2].schema(), other.result_type);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing RetrivalFaceResult instance
     * @param other The existing instance to copy.
     */
    private Builder(RetrivalFaceResult other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.face)) {
        this.face = data().deepCopy(fields()[0].schema(), other.face);
        fieldSetFlags()[0] = true;
      }
      this.faceBuilder = null;
      if (isValidValue(fields()[1], other.retrieval_results)) {
        this.retrieval_results = data().deepCopy(fields()[1].schema(), other.retrieval_results);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.result_type)) {
        this.result_type = data().deepCopy(fields()[2].schema(), other.result_type);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'face' field.
      * @return The value.
      */
    public Face getFace() {
      return face;
    }

    /**
      * Sets the value of the 'face' field.
      * @param value The value of 'face'.
      * @return This builder.
      */
    public RetrivalFaceResult.Builder setFace(Face value) {
      validate(fields()[0], value);
      this.faceBuilder = null;
      this.face = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'face' field has been set.
      * @return True if the 'face' field has been set, false otherwise.
      */
    public boolean hasFace() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'face' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Face.Builder getFaceBuilder() {
      if (faceBuilder == null) {
        if (hasFace()) {
          setFaceBuilder(Face.newBuilder(face));
        } else {
          setFaceBuilder(Face.newBuilder());
        }
      }
      return faceBuilder;
    }

    /**
     * Sets the Builder instance for the 'face' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public RetrivalFaceResult.Builder setFaceBuilder(Face.Builder value) {
      clearFace();
      faceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'face' field has an active Builder instance
     * @return True if the 'face' field has an active Builder instance
     */
    public boolean hasFaceBuilder() {
      return faceBuilder != null;
    }

    /**
      * Clears the value of the 'face' field.
      * @return This builder.
      */
    public RetrivalFaceResult.Builder clearFace() {
      face = null;
      faceBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'retrieval_results' field.
      * @return The value.
      */
    public java.util.List<RetrievalResult> getRetrievalResults() {
      return retrieval_results;
    }

    /**
      * Sets the value of the 'retrieval_results' field.
      * @param value The value of 'retrieval_results'.
      * @return This builder.
      */
    public RetrivalFaceResult.Builder setRetrievalResults(java.util.List<RetrievalResult> value) {
      validate(fields()[1], value);
      this.retrieval_results = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'retrieval_results' field has been set.
      * @return True if the 'retrieval_results' field has been set, false otherwise.
      */
    public boolean hasRetrievalResults() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'retrieval_results' field.
      * @return This builder.
      */
    public RetrivalFaceResult.Builder clearRetrievalResults() {
      retrieval_results = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'result_type' field.
      * @return The value.
      */
    public ResultType getResultType() {
      return result_type;
    }

    /**
      * Sets the value of the 'result_type' field.
      * @param value The value of 'result_type'.
      * @return This builder.
      */
    public RetrivalFaceResult.Builder setResultType(ResultType value) {
      validate(fields()[2], value);
      this.result_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'result_type' field has been set.
      * @return True if the 'result_type' field has been set, false otherwise.
      */
    public boolean hasResultType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'result_type' field.
      * @return This builder.
      */
    public RetrivalFaceResult.Builder clearResultType() {
      result_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public RetrivalFaceResult build() {
      try {
        RetrivalFaceResult record = new RetrivalFaceResult();
        if (faceBuilder != null) {
          record.face = this.faceBuilder.build();
        } else {
          record.face = fieldSetFlags()[0] ? this.face : (Face) defaultValue(fields()[0]);
        }
        record.retrieval_results = fieldSetFlags()[1] ? this.retrieval_results : (java.util.List<RetrievalResult>) defaultValue(fields()[1]);
        record.result_type = fieldSetFlags()[2] ? this.result_type : (ResultType) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
